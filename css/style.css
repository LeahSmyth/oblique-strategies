body {
	text-transform:uppercase;
	font:4em "Avenir";
    font-family:'Amatic SC', cursive;
    max-width:100%;
	}

.room{
    width:100%;
    height:100%;
    position:fixed;
}
	/* The container that the card is centred inside. */
	.container {
	position: fixed !important;
	position: absolute;
	top:0;
	right:0;
	bottom:0;
	left:0;
	display: flex;
	display: -webkit-flex;
	justify-content: center;
    padding-left:22%;
    padding-right:22%;
    padding-top:11%;
	}
	
	/* This is the card. */
	.card {
	padding:10px;
	display: flex;
	justify-content: center;
	text-align: center;
	-webkit-perspective: 1000; /* NEW */
	}
	/* Padding so the type doesn't hit the edge of the card. */
	
	p {
    color:#FFFFFF;
	padding:10px;
	}

	/* The CSS for the fade in. */ 
	@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
	@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
	@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

	.fade-in {
	opacity:0;  /* Make things invisible upon start */
	-webkit-animation:fadeIn ease-in 1;  /* Call the keyframe named fadeIn, use animattion ease-in and repeat it only 1 time. */
	-moz-animation:fadeIn ease-in 1;
	animation:fadeIn ease-in 1;
	-webkit-animation-fill-mode:forwards;  /* This makes sure that after animation is done we remain at the last keyframe value (opacity: 1). */
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;
	-webkit-animation-duration:1s;
	-moz-animation-duration:1s;
	animation-duration:1s;
	}